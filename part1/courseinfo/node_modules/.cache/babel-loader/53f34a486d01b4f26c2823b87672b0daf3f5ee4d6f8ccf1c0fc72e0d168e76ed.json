{"ast":null,"code":"var _jsxFileName = \"/Users/mn/Desktop/fs-open/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/*\nRefactor the code so that it consists of three new components: Header, Content, and Total. \nAll data still resides in the App component, which passes the necessary data to each component using props. \nHeader takes care of rendering the name of the course, Content renders the parts and their number of exercises \nand Total renders the total number of exercises.\n\nconst App = () => {\n  // const-definitions\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content ... />\n      <Total ... />\n    </div>\n  )\n}\n*/\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.content.part1, \" \", props.content.exercise1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.content.part2, \" \", props.content.exercise2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.content.part3, \" \", props.content.exercise3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c2 = Content;\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", props.content.exercises1 + props.content.exercises2 + props.content.exercises3]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n_c3 = Total;\nconst App = () => {\n  const course = 'Half Stack application development';\n  const courseContent = {\n    part1: 'Fundamentals of React',\n    exercises1: 10,\n    part2: 'Using props to pass data',\n    exercises2: 7,\n    part3: 'State of a component',\n    exercises3: 14\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      content: courseContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      content: courseContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n\n  // return (\n  //   <div>\n  //     <h1>{course}</h1>\n  //     <p>\n  //       {part1} {exercises1}\n  //     </p>\n  //     <p>\n  //       {part2} {exercises2}\n  //     </p>\n  //     <p>\n  //       {part3} {exercises3}\n  //     </p>\n  //     <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n  //   </div>\n  // )\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["Header","props","_jsxDEV","children","course","fileName","_jsxFileName","lineNumber","columnNumber","_c","Content","_Fragment","content","part1","exercise1","part2","exercise2","part3","exercise3","_c2","Total","exercises1","exercises2","exercises3","_c3","App","courseContent","_c4","$RefreshReg$"],"sources":["/Users/mn/Desktop/fs-open/part1/src/App.js"],"sourcesContent":["\n/*\nRefactor the code so that it consists of three new components: Header, Content, and Total. \nAll data still resides in the App component, which passes the necessary data to each component using props. \nHeader takes care of rendering the name of the course, Content renders the parts and their number of exercises \nand Total renders the total number of exercises.\n\nconst App = () => {\n  // const-definitions\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content ... />\n      <Total ... />\n    </div>\n  )\n}\n*/\n\nconst Header = (props) => {\n  return (\n    <h1>{props.course}</h1>\n  )\n}\n\nconst Content = (props) => {\n  return (\n    <>\n    <p>{props.content.part1} {props.content.exercise1}</p>\n    <p>{props.content.part2} {props.content.exercise2}</p>\n    <p>{props.content.part3} {props.content.exercise3}</p>\n    </>\n  )\n}\n\nconst Total = (props) => {\n  return (\n  <p>Number of exercises {props.content.exercises1 + props.content.exercises2 + props.content.exercises3}</p>\n  )\n}\n\nconst App = () => {\n  const course = 'Half Stack application development'\n\n  const courseContent = {\n    part1: 'Fundamentals of React',\n    exercises1: 10,\n    part2: 'Using props to pass data',\n    exercises2: 7,\n    part3: 'State of a component',\n    exercises3: 14\n  }\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content content={courseContent} />\n      <Total content={courseContent} />\n    </div>\n  )\n\n  // return (\n  //   <div>\n  //     <h1>{course}</h1>\n  //     <p>\n  //       {part1} {exercises1}\n  //     </p>\n  //     <p>\n  //       {part2} {exercises2}\n  //     </p>\n  //     <p>\n  //       {part3} {exercises3}\n  //     </p>\n  //     <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n  //   </div>\n  // )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}